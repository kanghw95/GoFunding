<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Admin">
	<resultMap type="User" id="resultUser">
		<id property="userId" column="id"/>
		<result property="userName" column="name"/>
		<result property="userNick" column="nickname"/>
		<result property="userPhone" column="phone"/>
		<result property="gender" column="gender"/>
		<result property="userAge" column="age"/>
		<result property="point" column="point"/>
		<result property="reportCnt" column="reportcnt"/>
		<result property="userNo" column="userno"/>
	</resultMap>
	<resultMap type="Board" id="freeBoard"> <!-- 자유 게시판 -->
		<id property="boardNo" column="freeno"/>
		<result property="boardTitle" column="freetitle"/>		
		<result property="boardContent" column="freecontent"/>		
		<result property="boardDate" column="freedate"/>		
		<result property="boardCnt" column="freecnt"/>		
		<result property="boardId" column="id"/>		
	</resultMap>
	<resultMap type="Board" id="reviewBoard"> <!-- 후기 게시판 -->
		<id property="boardNo" column="reviewno"/>
		<result property="boardTitle" column="reviewtitle"/>		
		<result property="boardContent" column="reviewcontent"/>		
		<result property="boardDate" column="reviewdate"/>		
		<result property="boardCnt" column="reviewcnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="questionBoard"> <!-- 질의응답 게시판 -->
 		<id property="boardNo" column="qboardno"/>
		<result property="boardTitle" column="qboardtitle"/>		
		<result property="boardContent" column="qboardcontent"/>		
		<result property="boardDate" column="qboarddate"/>		
		<result property="boardCnt" column="qboardcnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="shareBoard"> <!-- 정보공유 게시판 -->
		<id property="boardNo" column="shareno"/>
		<result property="boardTitle" column="sharetitle"/>		
		<result property="boardContent" column="sharecontent"/>		
		<result property="boardDate" column="sharedate"/>		
		<result property="boardCnt" column="sharecnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="eventBoard"> <!-- 이벤트 게시판 -->
		<id property="boardNo" column="eventno"/>
		<result property="boardTitle" column="eventtitle"/>		
		<result property="boardContent" column="eventcontent"/>		
		<result property="boardDate" column="eventdate"/>		
		<result property="boardCnt" column="eventcnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="notice">
		<id property="boardNo" column="noticeno"/>
		<result property="boardTitle" column="noticetitle"/>		
		<result property="boardContent" column="noticecontent"/>		
		<result property="boardDate" column="noticedate"/>		
		<result property="boardCnt" column="noticecnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Qna" id="qna">
		<id property="qnaNo" column="qnano"/>
		<result property="qnaTitle" column="qnatitle"/>		
		<result property="qnaContent" column="qnacontent"/>
		<result property="qnaType" column="qnatype"/>		
		<result property="qnaDate" column="qnadate"/>		
		<result property="qnaCnt" column="qnacnt"/>		
		<result property="qnaId" column="id"/>
		<result property="qnaMId" column="mid"/>
		<result property="qnaADate" column="adate"/>
	</resultMap>
	
	<!-- 페이징 + 사용자 조회 -->
	<select id="selectUser" resultType="arraylist" resultMap="resultUser">
        SELECT * FROM (SELECT ID, NAME, NICKNAME, PHONE, GENDER, AGE, POINT, REPORTCNT, USERNO
		, ROW_NUMBER() OVER (ORDER BY USERNO ASC) AS RNUM FROM USERS) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY USERNO ASC;
	</select>
	
	<!-- 사용자 수 조회 -->
	<select id="countUser" resultType="int">
		SELECT COUNT(*) FROM USERS
	</select>
	
	<!-- 사용자 아이디 조회 -->
	<select id="searchId" resultType="arraylist" resultMap="resultUser">
		SELECT * FROM USERS WHERE ID LIKE #{userId} ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 이름 조회 -->
	<select id="searchName" resultType="arraylist" resultMap="resultUser">
		SELECT * FROM USERS WHERE NAME LIKE #{userName} ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 닉네임 조회 -->
	<select id="searchNick" resultType="arraylist" resultMap="resultUser">
		SELECT * FROM USERS WHERE NICKNAME LIKE #{userNick} ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 삭제 -->
	<delete id="deleteUser">
		DELETE FROM USERS WHERE USERNO = #{userNo}
	</delete>
	
	<!-- 페이징 + 자유 게시판 조회 -->
	<select id="selectFree" resultType="arraylist" resultMap="freeBoard">
		SELECT * FROM (SELECT FREENO, FREETITLE, FREECONTENT, FREEDATE, FREECNT, ID
		, ROW_NUMBER() OVER (ORDER BY FREENO ASC) AS RNUM FROM BULLETINEBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY FREENO ASC
	</select>
	
	<!-- 페이징 + 후기 게시판 조회 -->
	<select id="selectReview" resultType="arraylist" resultMap="reviewBoard">
		SELECT * FROM (SELECT REVIEWNO, REVIEWTITLE, REVIEWCONTENT, REVIEWDATE, REVIEWCNT, ID
		, ROW_NUMBER() OVER (ORDER BY REVIEWNO ASC) AS RNUM FROM REVIEWBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY REVIEWNO ASC
	</select>
	
	<!-- 페이징 + 질의응답 게시판 조회 -->
	<select id="selectQuestion" resultType="arraylist" resultMap="questionBoard">
		SELECT * FROM (SELECT QBOARDNO, QBOARDTITLE, QBOARDCONTENT, QBOARDDATE, QBOARDCNT, ID
		, ROW_NUMBER() OVER (ORDER BY QBOARDNO ASC) AS RNUM FROM QUESTIONBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY QBOARDNO ASC
	</select>
	
	<!-- 페이징 + 정보공유 게시판 조회 -->
	<select id="selectShare" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM (SELECT SHARENO, SHARETITLE, SHARECONTENT, SHAREDATE, SHARECNT, ID
		, ROW_NUMBER() OVER (ORDER BY SHARENO ASC) AS RNUM FROM SHAREBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY SHARENO ASC
	</select>
	
	<!-- 페이징 + 이벤트 게시판 조회 -->
	<select id="selectEvent" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM (SELECT EVENTNO, EVENTTITLE, EVENTCONTENT, EVENTDATE, EVENTCNT, ID
		, ROW_NUMBER() OVER (ORDER BY EVENTNO ASC) AS RNUM FROM EVENTBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY EVENTNO ASC
	</select>
	
	<!-- 페이징 + 공지사항 조회 -->
	<select id="selectNotice" resultType="arraylist" resultMap="notice">
		SELECT * FROM (SELECT NOTICENO, NOTICETITLE, NOTICECONTENT, NOTICEDATE, NOTICECNT, ID
		, ROW_NUMBER() OVER (ORDER BY NOTICENO ASC) AS RNUM FROM NOTICE) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY NOTICENO ASC
	</select>
	
	<!-- 페이징 + Qna 조회 -->
	<select id="selectQna" resultType="arraylist" resultMap="qna">
		SELECT * FROM (SELECT QNANO, QNATITLE, QNACONTENT, QNATYPE, QNADATE, QNACNT, ID, MID, ADATE
		, ROW_NUMBER() OVER (ORDER BY QNANO ASC) AS RNUM FROM QNA) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY QNANO ASC
	</select>
	
	<!-- 자유 게시판 제목 조회 -->
	<select id="searchFBoardTitle" resultType="arraylist" resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD WHERE FREETITLE LIKE #{boardTitle} ORDER BY FREENO ASC
	</select>
	
	<!-- 자유 게시판 작성자 조회 -->
	<select id="searchFBoardId" resultType="arraylist" resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD WHERE ID LIKE #{boardId} ORDER BY FREENO ASC
	</select>
	
	<!-- 후기 게시판 제목 조회 -->
	<select id="searchRBoardTitle" resultType="arraylist" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD WHERE REVIEWTITLE LIKE #{boardTitle} ORDER BY REVIEWNO ASC
	</select>
	
	<!-- 후기 게시판 작성자 조회 -->
	<select id="searchRBoardId" resultType="arraylist" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD WHERE ID LIKE #{boardId} ORDER BY REVIEWNO ASC
	</select>
	
	<!-- 질의응답 게시판 제목 조회 -->
	<select id="searchQBoardTitle" resultType="arraylist" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD WHERE QBOARDTITLE LIKE #{boardTitle} ORDER BY QBOARDNO ASC
	</select>
	
	<!-- 질의응답 게시판 작성자 조회 -->
	<select id="searchQBoardId" resultType="arraylist" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD WHERE ID LIKE #{boardId} ORDER BY QBOARDNO ASC
	</select>
	
	<!-- 정보공유 게시판 제목 조회 -->
	<select id="searchSBoardTitle" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD WHERE SHARETITLE LIKE #{boardTitle} ORDER BY SHARENO ASC
	</select>
	
	<!-- 정보공유 게시판 작성자 조회 -->
	<select id="searchSBoardId" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD WHERE ID LIKE #{boardId} ORDER BY SHARENO ASC
	</select>
	
	<!-- 이벤트 게시판 제목 조회 -->
	<select id="searchEBoardTitle" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD WHERE EVENTTITLE LIKE #{boardTitle} ORDER BY EVENTNO ASC
	</select>
	
	<!-- 이벤트 게시판 작성자 조회 -->
	<select id="searchEBoardId" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD WHERE ID LIKE #{boardId} ORDER BY EVENTNO ASC
	</select>
	
	<!-- 공지사항 제목 조회 -->
	<select id="searchNBoardTitle" resultType="arraylist" resultMap="notice">
		SELECT * FROM NOTICE WHERE NOTICETITLE LIKE #{boardTitle} ORDER BY NOTICENO ASC
	</select>
	
	<!-- 공지사항 작성자 조회 -->
	<select id="searchNBoardId" resultType="arraylist" resultMap="notice">
		SELECT * FROM NOTICE WHERE ID LIKE #{boardId} ORDER BY NOTICENO ASC
	</select>
	
	<!-- Qna 유형 조회 -->
	<select id="selectQnaType" resultType="arraylist" resultMap="qna">
		SELECT * FROM QNA 
		<choose>
			<when test="type == 1">
				WHERE QNATYPE = '펀딩문의'
			</when>
			<when test="type == 2">
				WHERE QNATYPE = '결제문의'
			</when>
			<when test="type == 3">
				WHERE QNATYPE = '계정문의'
			</when>
			<otherwise>
				WHERE QNATYPE = '기타'
			</otherwise>
		</choose>
	</select>
	
	<!-- 자유 게시판 글 수 조회 -->
	<select id="countFreeBoard" resultType="int">
		SELECT COUNT(*) FROM BULLETINEBOARD
	</select>
	
	<!-- 후기 게시판 글 수 조회 -->
	<select id="countReviewBoard" resultType="int">
		SELECT COUNT(*) FROM REVIEWBOARD
	</select>
	
	<!-- 질의응답 게시판 글 수 조회 -->
	<select id="countQuestionBoard" resultType="int">
		SELECT COUNT(*) FROM QUESTIONBOARD
	</select>
	
	<!-- 정보공유 게시판 글 수 조회 -->
	<select id="countShareBoard" resultType="int">
		SELECT COUNT(*) FROM SHAREBOARD
	</select>
	
	<!-- 이벤트 게시판 글 수 조회 -->
	<select id="countEventBoard" resultType="int">
		SELECT COUNT(*) FROM EVENTBOARD
	</select>
	
	<!-- 공지사항 글 수 조회 -->
	<select id="countNotice" resultType="int">
		SELECT COUNT(*) FROM NOTICE
	</select>
	
	<!-- Qna 글 수 조회 -->
	<select id="countQna" resultType="int">
		SELECT COUNT(*) FROM QNA
	</select>
	
	<!-- 자유 게시판 라디오박스 조회 -->
	<select id="selectFRadio"  resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD 
		<choose>
			<when test="date != null">
				ORDER BY FREEDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY FREECNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 후기 게시판 라디오박스 조회 -->
	<select id="selectRRadio" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD
		<choose>
			<when test="date != null">
				ORDER BY REVIEWDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY REVIEWCNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 질의응답 게시판 라디오박스 조회 -->
	<select id="selectQRadio" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD 
		<choose>
			<when test="date != null">
				ORDER BY QBOARDDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY QBOARDCNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 정보공유 게시판 라디오박스 조회 -->
	<select id="selectSRadio" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD
		<choose>
			<when test="date != null">
				ORDER BY SHAREDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY SHARECNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 이벤트 게시판 라디오박스 조회 -->
	<select id="selectERadio" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD
		<choose>
			<when test="date != null">
				ORDER BY EVENTDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY EVENTCNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 공지사항 라디오박스 조회 -->
	<select id="selectNRadio" resultMap="notice">
		SELECT * FROM NOTICE
		<choose>
			<when test="date != null">
				ORDER BY NOTICEDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY NOTICECNT DESC
			</when>
		</choose>
	</select>
	
	<!-- 자유게시판 글 삭제 -->
	<delete id="deleteFBoardList">
		DELETE FROM BULLETINEBOARD WHERE FREENO = #{boardNo}
	</delete>
	
	<!-- 후기 게시판 글 삭제 -->
	<delete id="deleteRBoardList">
		DELETE FROM REVIEWBOARD WHERE REVIEWNO = #{boardNo}
	</delete>
	
	<!-- 질의응답 게시판 글 삭제 -->
	<delete id="deleteQBoardList">
		DELETE FROM QUESTIONBOARD WHERE QBOARDNO = #{boardNo}
	</delete>
	
	<!-- 정보공유 게시판 글 삭제 -->
	<delete id="deleteSBoardList">
		DELETE FROM SHAREBOARD WHERE SHARENO = #{boardNo}
	</delete>
	
	<!-- 이벤트 게시판 글 삭제 -->
	<delete id="deleteEBoardList">
		DELETE FROM EVENTBOARD WHERE EVENTNO = #{boardNo}
	</delete>
	
	<!-- 공지사항 글 삭제 -->	
	<delete id="deleteNBoardList">		
		DELETE FROM NOTICE WHERE NOTICENO = #{boardNo}	
	</delete>
	
	<!-- Qna 글 삭제 -->
	<delete id="deleteQna">
		DELETE FROM QNA WHERE QNANO = #{qnaNo}
	</delete>

	<!-- 펀딩 목록 조회 : 전체 -->
	<select id="fundingList" resultType="map">
		SELECT FUNDINGTITLE, FUNDINGNO FROM FUNDING WHERE FUNDINGSTATE = '1' ORDER BY FUNDINGNO
	</select>
	
	<!-- 펀딩 목록 조회 : 카테고리 -->
	<select id="fundingListCate" resultType="map">
		SELECT FUNDINGNO, FUNDINGTITLE FROM FUNDING WHERE FUNDINGSTATE = '1'
		AND FUNDINGCATEGORY = #{fundingCategory} ORDER BY FUNDINGNO
	</select>
	
	<!-- 펀딩 신청 목록 조회 : 전체 -->
	<select id="selectFormList" resultType="Application">
		SELECT FUNDINGTITLE, APPLYNO FROM APPLICATION WHERE FEEDBACK IS NULL ORDER BY APPLYNO
	</select>
	
	<!-- 펀딩 신청 목록 조회 : 카테고리 -->
	<select id="selectFormCate" resultType="Application">
		SELECT FUNDINGTITLE, APPLYNO FROM APPLICATION WHERE FEEDBACK IS NULL AND
		FUNDINGCATEGORY = #{fundingCategory} ORDER BY APPLYNO
	</select>
	
	<!-- 반려 펀딩 목록 조회 : 전체 -->
	<select id="selectRejectedForm" resultType="Application">
		SELECT FUNDINGTITLE, FUNDINGCATEGORY, APPLYNO FROM APPLICATION WHERE FEEDBACK != 'approved'
		AND FEEDBACK IS NOT NULL ORDER BY APPLYNO
	</select>

	<!-- 반려 펀딩 목록 조회 : 카테고리 -->
	<select id="selectRejectedCategory" resultType="Application">
		SELECT FUNDINGTITLE, FUNDINGCATEGORY, APPLYNO FROM APPLICATION WHERE FEEDBACK != 'approved'
		AND FEEDBACK IS NOT NULL AND FUNDINGCATEGORY = #{fundingCategory} ORDER BY APPLYNO
	</select>
	
	<!-- 펀딩 신청 상세페이지 -->
	<select id="selectFormDetail" resultType="Application">
		SELECT * FROM APPLICATION WHERE APPLYNO = #{applyNo}
	</select>
	
	<!-- 신청 승인 / 메이커 생성 -->
	<insert id="makeMaker">
		INSERT INTO MAKER VALUES(#{maker}, #{description}, #{id})
	</insert>
	
	<!-- 신청 승인 / 펀딩 생성 -->
	<insert id="makeFunding">
		INSERT INTO FUNDING VALUES(SEQ_FUNDINGNO.NEXTVAL, 1, #{fundingCategory},
		#{fundingTitle}, #{fundingPrice}, #{fundingStart}, #{fundingFin}, #{maker},
		SYSDATE, #{fundingContent}, #{deliveryCharge}, #{deliveryDate}, 0)
	</insert>
	
	<!-- 신청 승인 / 리워드 생성 -->
	<insert id="makeReward">
		INSERT INTO REWARD VALUES (SEQ_REWARDNO.NEXTVAL, #{rewardTitle}, #{rewardEA},
		#{rewardPrice}, (SELECT FUNDINGNO FROM FUNDING WHERE MAKER = #{maker}), 0 )
	</insert>
	
	<!-- 신청 승인 / 신청서 confirmed 입력 -->
	<update id="applicationConfirm" parameterType="int">
		UPDATE APPLICATION SET FEEDBACK = 'approved' WHERE APPLYNO = #{applyNo}
	</update>
	
	<!-- 신청 거절 / 신청서 feedback 입력 -->
	<update id="formReject">
		UPDATE APPLICATION SET FEEDBACK = #{feedback} WHERE APPLYNO = #{applyNo}
	</update>
	
	<!-- 펀딩 통계 연령별 : 1020대 -->
	<select id="analAgeF1020" resultType="float">
        SELECT NVL ((SELECT NVL((SELECT COUNT(*)
        FROM (SELECT DISTINCT O.ID FROM ORDERS O JOIN USERS U ON O.ID=U.ID WHERE U.AGE BETWEEN 10 AND 29)),0) /
        NVL((SELECT COUNT(*) FROM ORDERS),0) CNT2 FROM DUAL), 0) CNT FROM DUAL
	</select>
	
	<!-- 펀딩 통계 연령별 : 3040대 -->
	<select id="analAgeF3040" resultType="float">
        SELECT NVL ((SELECT NVL((SELECT COUNT(*)
        FROM (SELECT DISTINCT O.ID FROM ORDERS O JOIN USERS U ON O.ID=U.ID WHERE U.AGE BETWEEN 30 AND 49)),0) /
        NVL((SELECT COUNT(*) FROM ORDERS),0) CNT2 FROM DUAL), 0) CNT FROM DUAL;
	</select>
	
	<!-- 펀딩 통계 연령별 : 5060대 -->
	<select id="analAgeF5060" resultType="float">
        SELECT NVL ((SELECT NVL((SELECT COUNT(*)
        FROM (SELECT DISTINCT O.ID FROM ORDERS O JOIN USERS U ON O.ID=U.ID WHERE U.AGE BETWEEN 50 AND 69)),0) /
        NVL((SELECT COUNT(*) FROM ORDERS),0) CNT2 FROM DUAL), 0) CNT FROM DUAL;
	</select>
	
	<!-- 펀딩 통계 분류별 : 일자리 창출 -->
	<select id="analCateF1" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='일자리 창출'
	</select>
	
	<!-- 펀딩 통계 분류별 : 공정 무역 -->
	<select id="analCateF2" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='공정 무역'
	</select>
	
	<!-- 펀딩 통계 분류별 : 친환경 -->
	<select id="analCateF3" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='친환경'
	</select>
	
	<!-- 펀딩 통계 분류별 : 기부 -->
	<select id="analCateF4" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='기부'
	</select>
	
	<!-- 펀딩 통계 분류별 : 작은 가게 -->
	<select id="analCateF5" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='작은 가게'
	</select>
	
	<!-- 펀딩 통계 분류별 : 미디어 -->
	<select id="analCateF6" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='미디어'
	</select>
	
	<!-- 펀딩 통계 분류별 : 창작자 -->
	<select id="analCateF7" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='창작자'
	</select>
	
	<!-- 펀딩 통계 분류별 : 남성 -->
	<select id="analFGenderM" resultType="Integer">
		SELECT COUNT(*) FROM (
		SELECT DISTINCT U.ID FROM ORDERS O JOIN USERS U ON U.ID=O.ID WHERE GENDER='m')
	</select>
	
	<!-- 펀딩 통계 분류별 : 여성 -->
	<select id="analFGenderF" resultType="Integer">
		SELECT COUNT(*) FROM (
		SELECT DISTINCT U.ID FROM ORDERS O JOIN USERS U ON U.ID=O.ID WHERE GENDER='f')
	</select>
	
	<!-- 커뮤니티 통계 연령별 : 1020대 -->
	<select id="analAgeC1020" resultType="float">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.AGE BETWEEN 10 AND 29)), 0) AS RESULT FROM DUAL
	</select>
	
	<!-- 커뮤니티 통계 연령별 : 3040대 -->
	<select id="analAgeC3040" resultType="float">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.AGE BETWEEN 30 AND 49)), 0) AS RESULT FROM DUAL
	</select>
	
	<!-- 커뮤니티 통계 연령별 : 5060대 -->
	<select id="analAgeC5060" resultType="float">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.AGE BETWEEN 50 AND 69)), 0) AS RESULT FROM DUAL
	</select>	
	
	<!-- 커뮤니티 통계 분류별 : 자유게시판 -->
	<select id="analCateC1" resultType="Integer">
		SELECT COUNT(*) CNT FROM BULLETINEBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 후기게시판 -->
	<select id="analCateC2" resultType="Integer">
		SELECT COUNT(*) CNT FROM REVIEWBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 질답게시판 -->
	<select id="analCateC3" resultType="Integer">
		SELECT COUNT(*) CNT FROM QUESTIONBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 이벤트게시판 -->
	<select id="analCateC4" resultType="Integer">
		SELECT COUNT(*) CNT FROM EVENTBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 정보공유게시판 -->
	<select id="analCateC5" resultType="Integer">
		SELECT COUNT(*) CNT FROM SHAREBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 남성 -->
	<select id="analCGenderM" resultType="Integer">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.GENDER ='m')), 0) AS RESULT FROM DUAL   
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 여성 -->
	<select id="analCGenderF" resultType="Integer">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.GENDER ='f')), 0) AS RESULT FROM DUAL   
	</select>
	
	<!-- 실 결제 금액 차트 -->
	<select id="analPayment" resultType="hashMap">
		SELECT C.PAYMENTDATE, B.AMOUNT FROM
		(SELECT DISTINCT TO_CHAR(A.PAYMENTDATE,'YYYY-MM-DD') PAYMENTDATE,
		LAST_VALUE(TOTAL) OVER(PARTITION BY TO_CHAR(A.PAYMENTDATE,'YYYY-MM-DD') ) AMOUNT
		FROM (SELECT PAYMENTDATE, TOTALPAYMENT, SUM(TOTALPAYMENT) OVER (ORDER BY PAYMENTDATE
		ROWS UNBOUNDED PRECEDING) TOTAL FROM PAYMENT ORDER BY PAYMENTDATE) A ORDER BY PAYMENTDATE) B
		JOIN (SELECT TO_CHAR(SYSDATE - (LEVEL - 1), 'YYYY-MM-DD') PAYMENTDATE 
		<![CDATA[
		FROM DUAL CONNECT BY LEVEL <= 7) C ON B.PAYMENTDATE=C.PAYMENTDATE
		]]>
	</select>
	
	<!-- 실 결제 금액 표 -->
	<select id="analPaymentTab" resultType="hashMap">
		SELECT A.*, B.* FROM
        (SELECT COUNT(*) PAYMENTCNT, SUM(TOTALPAYMENT) TOTALPAYMENT FROM PAYMENT) A
        CROSS JOIN
        (SELECT COUNT(*) ORDERCNT, SUM(ORDERTOTALPRICE) ORDERTOTALPRICE FROM ORDERS) B
	</select>
	
	<!-- 펀딩 현황 표 -->
	<select id="analFundingTab" resultType="hashMap">
      	SELECT A.*, B.*, C.*, D.* FROM
        (SELECT COUNT(*) PROCEEDING FROM FUNDING WHERE FUNDINGSTATE=1) A
        CROSS JOIN
        (SELECT COUNT(*) APPLY FROM APPLICATION WHERE FEEDBACK IS NULL) B
        CROSS JOIN
        (SELECT COUNT(*) REJECT FROM APPLICATION WHERE FEEDBACK IS NOT NULL AND FEEDBACK != 'approved') C
        CROSS JOIN
        (SELECT COUNT(*) FINISH FROM FUNDING WHERE FUNDINGSTATE = 0) D		
	</select>
		
</mapper>
