<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Admin">
	<resultMap type="User" id="resultUser">
		<id property="userId" column="id"/>
		<result property="userName" column="name"/>
		<result property="userNick" column="nickname"/>
		<result property="userPhone" column="phone"/>
		<result property="gender" column="gender"/>
		<result property="userAge" column="age"/>
		<result property="point" column="point"/>
		<result property="reportCnt" column="reportcnt"/>
		<result property="userNo" column="userno"/>
		<result property="suspensionStart" column="suspensionstart"/>
		<result property="suspensionFin" column="suspensionfin"/>
	</resultMap>
	<resultMap type="Board" id="freeBoard"> <!-- 자유 게시판 -->
		<id property="boardNo" column="freeno"/>
		<result property="boardTitle" column="freetitle"/>		
		<result property="boardContent" column="freecontent"/>		
		<result property="boardDate" column="freedate"/>		
		<result property="boardCnt" column="freecnt"/>		
		<result property="boardId" column="id"/>		
	</resultMap>
	<resultMap type="Board" id="reviewBoard"> <!-- 후기 게시판 -->
		<id property="boardNo" column="reviewno"/>
		<result property="boardTitle" column="reviewtitle"/>		
		<result property="boardContent" column="reviewcontent"/>		
		<result property="boardDate" column="reviewdate"/>		
		<result property="boardCnt" column="reviewcnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="questionBoard"> <!-- 질의응답 게시판 -->
 		<id property="boardNo" column="qboardno"/>
		<result property="boardTitle" column="qboardtitle"/>		
		<result property="boardContent" column="qboardcontent"/>		
		<result property="boardDate" column="qboarddate"/>		
		<result property="boardCnt" column="qboardcnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="shareBoard"> <!-- 정보공유 게시판 -->
		<id property="boardNo" column="shareno"/>
		<result property="boardTitle" column="sharetitle"/>		
		<result property="boardContent" column="sharecontent"/>		
		<result property="boardDate" column="sharedate"/>		
		<result property="boardCnt" column="sharecnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="eventBoard"> <!-- 이벤트 게시판 -->
		<id property="boardNo" column="eventno"/>
		<result property="boardTitle" column="eventtitle"/>		
		<result property="boardContent" column="eventcontent"/>		
		<result property="boardDate" column="eventdate"/>		
		<result property="boardCnt" column="eventcnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Board" id="notice">
		<id property="boardNo" column="noticeno"/>
		<result property="boardTitle" column="noticetitle"/>		
		<result property="boardContent" column="noticecontent"/>		
		<result property="boardDate" column="noticedate"/>		
		<result property="boardCnt" column="noticecnt"/>		
		<result property="boardId" column="id"/>
	</resultMap>
	<resultMap type="Qna" id="qna">
		<id property="qnaNo" column="qnano"/>
		<result property="qnaTitle" column="qnatitle"/>		
		<result property="qnaContent" column="qnacontent"/>
		<result property="qnaType" column="qnatype"/>		
		<result property="qnaDate" column="qnadate"/>		
		<result property="qnaCnt" column="qnacnt"/>		
		<result property="qnaId" column="id"/>
		<result property="qnaMId" column="mid"/>
		<result property="qnaADate" column="adate"/>
		<result property="replyCnt" column="replycnt"/>
	</resultMap>
	<resultMap type="Comment" id="cmt">
		<id property="cmtNo" column="qnacmtno"/>
		<result property="cmtContent" column="qnacmtcontent"/>
		<result property="cmtDate" column="qnacmtdate"/>
	</resultMap>
	<resultMap type="Report" id="rpt">
		<result property="reportNo" column="reportno"/>
		<result property="reportId" column="reportid"/>
		<result property="reportType" column="reporttype"/>
		<result property="reportWr" column="reportwr"/>
		<result property="reportTitle" column="reporttitle"/>
		<result property="reportContent" column="reportcontent"/>
		<result property="id" column="id"/>
		<result property="reportState" column="reportstate"/>
	</resultMap>
	<resultMap type="Report" id="brpt">
		<result property="reportNo" column="breportno"/>
		<result property="reportId" column="breportid"/>
		<result property="reportType" column="breporttype"/>
		<result property="reportWr" column="breportwr"/>
		<result property="reportTitle" column="breporttitle"/>
		<result property="reportContent" column="breportcontent"/>
		<result property="id" column="id"/>
		<result property="reportState" column="breportstate"/>
	</resultMap>
	<resultMap type="Report" id="crpt">
		<result property="reportNo" column="creportno"/>
		<result property="reportId" column="creportid"/>
		<result property="reportType" column="creporttype"/>
		<result property="reportWr" column="creportwr"/>
		<result property="reportContent" column="creportcontent"/>
		<result property="id" column="id"/>
		<result property="reportState" column="creportstate"/>
	</resultMap>
	<resultMap type="Faq" id="faq">
		<id property="faqNo" column="faqno"/>
		<result property="faqTitle" column="faqtitle"/>
		<result property="faqContent" column="faqcontent"/>
		<result property="faqDate" column="faqdate"/>
		<result property="faqCnt" column="faqcnt"/>
		<result property="faqTitle" column="faqtitle"/>
		<result property="id" column="id"/>
	</resultMap>
	<resultMap type="Comment" id="freeCmt">
		<id property="cmtNo" column="freecmtno"/>
		<result property="cmtContent" column="freecmtcontent"/>
		<result property="id" column="id"/>
		<result property="cmtDate" column="freecmtdate"/>
	</resultMap>
		<resultMap type="Comment" id="reviewCmt">
		<id property="cmtNo" column="reviewcmtno"/>
		<result property="cmtContent" column="reviewcmtcontent"/>
		<result property="id" column="id"/>
		<result property="cmtDate" column="reviewcmtdate"/>
	</resultMap>
		<resultMap type="Comment" id="questionCmt">
		<id property="cmtNo" column="qcmtno"/>
		<result property="cmtContent" column="qcmtcontent"/>
		<result property="id" column="id"/>
		<result property="cmtDate" column="qcmtdate"/>
	</resultMap>
		<resultMap type="Comment" id="shareCmt">
		<id property="cmtNo" column="sharecmtno"/>
		<result property="cmtContent" column="sharecmtcontent"/>
		<result property="id" column="id"/>
		<result property="cmtDate" column="sharecmtdate"/>
	</resultMap>
		<resultMap type="Comment" id="eventCmt">
		<id property="cmtNo" column="eventcmtno"/>
		<result property="cmtContent" column="eventcmtcontent"/>
		<result property="id" column="id"/>
		<result property="cmtDate" column="eventcmtdate"/>
	</resultMap>
	
	<!-- 페이징 + 사용자 조회 -->
	<select id="selectUser" resultType="arraylist" resultMap="resultUser">
        SELECT * FROM (SELECT ID, NAME, NICKNAME, PHONE, GENDER, AGE, POINT, REPORTCNT, USERNO, SUSPENSIONSTART, SUSPENSIONFIN
		, ROW_NUMBER() OVER (ORDER BY USERNO DESC) AS RNUM FROM USERS) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 수 조회 -->
	<select id="countUser" resultType="int">
		SELECT COUNT(*) FROM USERS
	</select>
	
	<!-- 사용자 아이디 조회 -->
	<select id="searchId" resultType="arraylist" resultMap="resultUser">
		SELECT * FROM USERS WHERE ID LIKE #{userId} ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 이름 조회 -->
	<select id="searchName" resultType="arraylist" resultMap="resultUser">
		SELECT * FROM USERS WHERE NAME LIKE #{userName} ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 닉네임 조회 -->
	<select id="searchNick" resultType="arraylist" resultMap="resultUser">
		SELECT * FROM USERS WHERE NICKNAME LIKE #{userNick} ORDER BY USERNO ASC
	</select>
	
	<!-- 사용자 삭제 -->
	<update id="deleteUser">
		UPDATE USERS SET AUTHORITY = 4 WHERE USERNO = #{userNo}
	</update>
	
	<!-- 페이징 + 자유 게시판 조회 -->
	<select id="selectFree" resultType="arraylist" resultMap="freeBoard">
		SELECT * FROM (SELECT FREENO, FREETITLE, FREECONTENT, FREEDATE, FREECNT, ID
		, ROW_NUMBER() OVER (ORDER BY FREENO DESC) AS RNUM FROM BULLETINEBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY FREENO DESC
	</select>
	
	<!-- 페이징 + 후기 게시판 조회 -->
	<select id="selectReview" resultType="arraylist" resultMap="reviewBoard">
		SELECT * FROM (SELECT REVIEWNO, REVIEWTITLE, REVIEWCONTENT, REVIEWDATE, REVIEWCNT, ID
		, ROW_NUMBER() OVER (ORDER BY REVIEWNO DESC) AS RNUM FROM REVIEWBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY REVIEWNO DESC
	</select>
	
	<!-- 페이징 + 질의응답 게시판 조회 -->
	<select id="selectQuestion" resultType="arraylist" resultMap="questionBoard">
		SELECT * FROM (SELECT QBOARDNO, QBOARDTITLE, QBOARDCONTENT, QBOARDDATE, QBOARDCNT, ID
		, ROW_NUMBER() OVER (ORDER BY QBOARDNO DESC) AS RNUM FROM QUESTIONBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY QBOARDNO DESC
	</select>
	
	<!-- 페이징 + 정보공유 게시판 조회 -->
	<select id="selectShare" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM (SELECT SHARENO, SHARETITLE, SHARECONTENT, SHAREDATE, SHARECNT, ID
		, ROW_NUMBER() OVER (ORDER BY SHARENO DESC) AS RNUM FROM SHAREBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY SHARENO DESC
	</select>
	
	<!-- 페이징 + 이벤트 게시판 조회 -->
	<select id="selectEvent" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM (SELECT EVENTNO, EVENTTITLE, EVENTCONTENT, EVENTDATE, EVENTCNT, ID
		, ROW_NUMBER() OVER (ORDER BY EVENTNO DESC) AS RNUM FROM EVENTBOARD) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY EVENTNO DESC
	</select>
	
	<!-- 페이징 + 공지사항 조회 -->
	<select id="selectNotice" resultType="arraylist" resultMap="notice">
		SELECT * FROM (SELECT NOTICENO, NOTICETITLE, NOTICECONTENT, NOTICEDATE, NOTICECNT, ID
		, ROW_NUMBER() OVER (ORDER BY NOTICENO DESC) AS RNUM FROM NOTICE) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY NOTICENO DESC
	</select>
	
	<!-- 페이징 + Qna 조회 -->
	<select id="selectQna" resultType="arraylist" resultMap="qna">
		SELECT * FROM (SELECT QNANO, QNATITLE, QNACONTENT, QNATYPE, QNADATE, QNACNT, ID, MID, ADATE, REPLYCNT
		, ROW_NUMBER() OVER (ORDER BY QNANO DESC) AS RNUM FROM QNA) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY QNANO DESC
	</select>
	
	<!-- QnaReply qNo 조회 -->
	<select id="selectQnaReply" resultMap="qna">
		SELECT * FROM QNA WHERE QNANO = #{qNo}
	</select>
	
	<!-- 자유 게시판 제목 조회 -->
	<select id="searchFBoardTitle" resultType="arraylist" resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD WHERE FREETITLE LIKE #{boardTitle} ORDER BY FREENO ASC
	</select>
	
	<!-- 자유 게시판 작성자 조회 -->
	<select id="searchFBoardId" resultType="arraylist" resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD WHERE ID LIKE #{boardId} ORDER BY FREENO ASC
	</select>
	
	<!-- 후기 게시판 제목 조회 -->
	<select id="searchRBoardTitle" resultType="arraylist" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD WHERE REVIEWTITLE LIKE #{boardTitle} ORDER BY REVIEWNO ASC
	</select>
	
	<!-- 후기 게시판 작성자 조회 -->
	<select id="searchRBoardId" resultType="arraylist" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD WHERE ID LIKE #{boardId} ORDER BY REVIEWNO ASC
	</select>
	
	<!-- 질의응답 게시판 제목 조회 -->
	<select id="searchQBoardTitle" resultType="arraylist" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD WHERE QBOARDTITLE LIKE #{boardTitle} ORDER BY QBOARDNO ASC
	</select>
	
	<!-- 질의응답 게시판 작성자 조회 -->
	<select id="searchQBoardId" resultType="arraylist" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD WHERE ID LIKE #{boardId} ORDER BY QBOARDNO ASC
	</select>
	
	<!-- 정보공유 게시판 제목 조회 -->
	<select id="searchSBoardTitle" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD WHERE SHARETITLE LIKE #{boardTitle} ORDER BY SHARENO ASC
	</select>
	
	<!-- 정보공유 게시판 작성자 조회 -->
	<select id="searchSBoardId" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD WHERE ID LIKE #{boardId} ORDER BY SHARENO ASC
	</select>
	
	<!-- 이벤트 게시판 제목 조회 -->
	<select id="searchEBoardTitle" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD WHERE EVENTTITLE LIKE #{boardTitle} ORDER BY EVENTNO ASC
	</select>
	
	<!-- 이벤트 게시판 작성자 조회 -->
	<select id="searchEBoardId" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD WHERE ID LIKE #{boardId} ORDER BY EVENTNO ASC
	</select>
	
	<!-- 공지사항 제목 조회 -->
	<select id="searchNBoardTitle" resultType="arraylist" resultMap="notice">
		SELECT * FROM NOTICE WHERE NOTICETITLE LIKE #{boardTitle} ORDER BY NOTICENO ASC
	</select>
	
	<!-- 공지사항 작성자 조회 -->
	<select id="searchNBoardId" resultType="arraylist" resultMap="notice">
		SELECT * FROM NOTICE WHERE ID LIKE #{boardId} ORDER BY NOTICENO ASC
	</select>
	
	<!-- Qna 유형 조회 -->
	<select id="selectQnaType" resultType="arraylist" resultMap="qna">
		SELECT * FROM QNA 
		<choose>
			<when test="type == 1">
				WHERE QNATYPE = '펀딩문의'
			</when>
			<when test="type == 2">
				WHERE QNATYPE = '결제문의'
			</when>
			<when test="type == 3">
				WHERE QNATYPE = '계정문의'
			</when>
			<otherwise>
				WHERE QNATYPE = '기타'
			</otherwise>
		</choose>
	</select>
	
	<!-- 자유 게시판 글 수 조회 -->
	<select id="countFreeBoard" resultType="int">
		SELECT COUNT(*) FROM BULLETINEBOARD
	</select>
	
	<!-- 후기 게시판 글 수 조회 -->
	<select id="countReviewBoard" resultType="int">
		SELECT COUNT(*) FROM REVIEWBOARD
	</select>
	
	<!-- 질의응답 게시판 글 수 조회 -->
	<select id="countQuestionBoard" resultType="int">
		SELECT COUNT(*) FROM QUESTIONBOARD
	</select>
	
	<!-- 정보공유 게시판 글 수 조회 -->
	<select id="countShareBoard" resultType="int">
		SELECT COUNT(*) FROM SHAREBOARD
	</select>
	
	<!-- 이벤트 게시판 글 수 조회 -->
	<select id="countEventBoard" resultType="int">
		SELECT COUNT(*) FROM EVENTBOARD
	</select>
	
	<!-- 공지사항 글 수 조회 -->
	<select id="countNotice" resultType="int">
		SELECT COUNT(*) FROM NOTICE
	</select>
	
	<!-- Qna 글 수 조회 -->
	<select id="countQna" resultType="int">
		SELECT COUNT(*) FROM QNA
	</select>
	
	<!-- 자유 게시판 라디오박스 조회 -->
	<select id="selectFRadio"  resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD 
		<choose>
			<when test="date != null">
				ORDER BY FREEDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY FREECNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 후기 게시판 라디오박스 조회 -->
	<select id="selectRRadio" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD
		<choose>
			<when test="date != null">
				ORDER BY REVIEWDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY REVIEWCNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 질의응답 게시판 라디오박스 조회 -->
	<select id="selectQRadio" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD 
		<choose>
			<when test="date != null">
				ORDER BY QBOARDDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY QBOARDCNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 정보공유 게시판 라디오박스 조회 -->
	<select id="selectSRadio" resultType="arraylist" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD
		<choose>
			<when test="date != null">
				ORDER BY SHAREDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY SHARECNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 이벤트 게시판 라디오박스 조회 -->
	<select id="selectERadio" resultType="arraylist" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD
		<choose>
			<when test="date != null">
				ORDER BY EVENTDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY EVENTCNT DESC
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 공지사항 라디오박스 조회 -->
	<select id="selectNRadio" resultMap="notice">
		SELECT * FROM NOTICE
		<choose>
			<when test="date != null">
				ORDER BY NOTICEDATE DESC
			</when>
			<when test="cnt != null">
				ORDER BY NOTICECNT DESC
			</when>
		</choose>
	</select>
	
	<!-- 자유게시판 글 삭제 -->
	<delete id="deleteFBoardList">
		DELETE FROM BULLETINEBOARD WHERE FREENO = #{boardNo}
	</delete>
	
	<!-- 후기 게시판 글 삭제 -->
	<delete id="deleteRBoardList">
		DELETE FROM REVIEWBOARD WHERE REVIEWNO = #{boardNo}
	</delete>
	
	<!-- 질의응답 게시판 글 삭제 -->
	<delete id="deleteQBoardList">
		DELETE FROM QUESTIONBOARD WHERE QBOARDNO = #{boardNo}
	</delete>
	
	<!-- 정보공유 게시판 글 삭제 -->
	<delete id="deleteSBoardList">
		DELETE FROM SHAREBOARD WHERE SHARENO = #{boardNo}
	</delete>
	
	<!-- 이벤트 게시판 글 삭제 -->
	<delete id="deleteEBoardList">
		DELETE FROM EVENTBOARD WHERE EVENTNO = #{boardNo}
	</delete>
	
	<!-- 공지사항 글 삭제 -->	
	<delete id="deleteNBoardList">		
		DELETE FROM NOTICE WHERE NOTICENO = #{boardNo}	
	</delete>
	
	<!-- Qna 글 삭제 -->
	<delete id="deleteQna">
		DELETE FROM QNA WHERE QNANO = #{qnaNo}
	</delete>
	
	<!-- Qna 답글 추가 -->
	<insert id="qnaInsert">
		INSERT INTO QNACOMMENT VALUES (QNACMT_SEQ.NEXTVAL, #{cmtContent}, SYSDATE, 0, 0, 0
		, 'admin', #{cmtNo})
	</insert>
	
	<!-- Qna 특정 답글 수 -->
	<update id="replyUpdate" parameterType="qna">
		UPDATE QNA SET REPLYCNT=(SELECT COUNT(*) FROM QNACOMMENT WHERE QNANO=#{cmtNo}) WHERE QNANO=#{cmtNo}
	</update>
	
	<!-- Qna 답글 조회 -->
	<select id="qnaCmt" resultType="arraylist" resultMap="cmt">
		SELECT * FROM QNACOMMENT WHERE QNANO = #{cmtNo} ORDER BY QNACMTNO
	</select>
	
	<!-- Qna 답글 하나만 조회 -->
	<select id="qnaOne" resultType="arraylist" resultMap="cmt">
		SELECT * FROM QNACOMMENT WHERE QNACMTNO = (SELECT max(QNACMTNO) FROM QNACOMMENT) AND QNANO = #{cmtNo}
	</select>
	
	<!-- Qna 특정 답글 수 -->
	<select id="replyCount" resultMap="cmt">
		SELECT COUNT(*) FROM QNACOMMENT WHERE QNANO = #{cmtNo}
	</select>

	<!-- 신고 내역 조회 -->
	<select id="report" resultMap="rpt">
		SELECT REPORTNO, REPORTID, REPORTTYPE, REPORTWR, REPORTTITLE, REPORTCONTENT, ID, REPORTSTATE
		FROM (
		SELECT BREPORTNO AS REPORTNO, BREPORTID AS REPORTID
		, BREPORTTYPE AS REPORTTYPE, BREPORTWR AS REPORTWR
		, BREPORTTITLE AS REPORTTITLE, BREPORTCONTENT AS REPORTCONTENT
		, ID, BREPORTSTATE AS REPORTSTATE FROM BOARDREPORT
		UNION ALL
		SELECT CREPORTNO AS REPORTNO, CREPORTID AS REPORTID
		, CREPORTTYPE AS REPORTTYPE, CREPORTWR AS REPORTWR
		, '' AS REPORTTITLE, CREPORTCONTENT AS REPORTCONTENT
		, ID, CREPORTSTATE AS REPORTSTATE FROM COMMENTREPORT
		) ORDER BY REPORTNO DESC
	</select>
	
	<!-- 게시글 신고 상세 조회 -->
	<select id="bReport" resultMap="brpt">
		SELECT * FROM BOARDREPORT WHERE BREPORTNO = #{reportNo}
	</select>
	
	<!-- 댓글 신고 상세 조회 -->
	<select id="cReport" resultMap="crpt">
		SELECT * FROM COMMENTREPORT WHERE CREPORTNO = #{reportNo}
	</select>

	<!-- 회원 정지일 설정 -->
	<update id="userStop">
		UPDATE USERS SET SUSPENSIONSTART = #{suspensionStart}, SUSPENSIONFIN = #{suspensionFin} WHERE ID = #{userId}
	</update>
	
	<!-- 게시글 신고 상태 변경 -->
	<update id="bReportState">
		UPDATE BOARDREPORT SET BREPORTSTATE = 'Y' WHERE BREPORTNO = #{reportNo}
	</update>
	
	<!-- 댓글 신고 상태 변경 -->
	<update id="cReportState">
		UPDATE COMMENTREPORT SET CREPORTSTATE = 'Y' WHERE CREPORTNO = #{reportNo}
	</update>
	
	<!-- 회원 정지 횟수 추가 -->
	<update id="reportCnt">
		UPDATE USERS SET REPORTCNT = REPORTCNT + 1 WHERE ID = #{userId}
	</update>
	
	<!-- 회원 권한 정지 -->
	<update id="userAuthority">
		UPDATE USERS SET AUTHORITY = 3 WHERE ID = #{userId}
	</update>
	
	<!-- 정지 해제 -->
	<update id="reportStop">
		<![CDATA[UPDATE USERS SET AUTHORITY = 1, SUSPENSIONSTART = NULL, SUSPENSIONFIN = NULL WHERE SUSPENSIONFIN <= SYSTIMESTAMP]]>
	</update>
	
	<!-- 댓글 신고 내역 삭제 -->
	<delete id="deleteCReport">
		DELETE FROM COMMENTREPORT WHERE CREPORTNO = #{reportNo}
	</delete>
	
	<!-- 게시글 신고 내역 삭제 -->
	<delete id="deleteBReport">
		DELETE FROM BOARDREPORT WHERE BREPORTNO = #{reportNo}
	</delete>
	
	<!-- 신고 내역 검색 -->
	<select id="reportSelect" resultMap="rpt">
		SELECT * FROM (SELECT REPORTNO, REPORTID, REPORTTYPE, REPORTWR, REPORTTITLE, REPORTCONTENT, ID, REPORTSTATE 
		FROM (
		SELECT BREPORTNO AS REPORTNO, BREPORTID AS REPORTID, BREPORTTYPE AS REPORTTYPE, BREPORTWR AS REPORTWR, BREPORTTITLE AS REPORTTITLE, BREPORTCONTENT AS REPORTCONTENT
		, ID, BREPORTSTATE AS REPORTSTATE FROM BOARDREPORT
		UNION ALL
		SELECT CREPORTNO AS REPORTNO, CREPORTID AS REPORTID, CREPORTTYPE AS REPORTTYPE, CREPORTWR AS REPORTWR, '' AS REPORTTITLE, CREPORTCONTENT AS REPORTCONTENT
		, ID, CREPORTSTATE AS REPORTSTATE FROM COMMENTREPORT 
		) ORDER BY REPORTNO DESC) WHERE REPORTTYPE = #{reportType}
	</select>
	
	<!-- fqa 조회 -->
	<select id="faq" resultMap="faq">
		SELECT * FROM (SELECT FAQNO, FAQTITLE, FAQCONTENT, FAQDATE, FAQCNT, ID
		, ROW_NUMBER() OVER (ORDER BY FAQNO DESC) AS RNUM FROM FAQ) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY FAQNO DESC
	</select>
	
	<!-- faq 수 조회 -->
	<select id="faqCount" resultType="int">
		SELECT COUNT(*) FROM FAQ
	</select>
	
	<!-- faq 검색 -->
	<select id="selectFaq" resultMap="faq">
		SELECT * FROM FAQ WHERE FAQTITLE LIKE #{faqTitle} ORDER BY FAQNO DESC
	</select>
	
	<!-- faq 삭제 -->
	<delete id="deleteFaq">
		DELETE FROM FAQ WHERE FAQNO = #{faqNo}
	</delete>
	
	<!-- faq 글 등록 -->
	<insert id="insertFaq">
		INSERT INTO FAQ VALUES (FAQ_SEQ.NEXTVAL, #{faqTitle}, #{faqContent}, SYSDATE, 0, 'admin')
	</insert>	
	
	<!-- 공지사항 글 등록 -->
	<insert id="insertNotice">
		INSERT INTO NOTICE VALUES (NOTICE_SEQ.NEXTVAL, #{boardTitle}, #{boardContent}, SYSDATE, 0, 'admin' )
	</insert>
	
	<!-- 공지사항 상세보기 -->
	<select id="noticeDetail" resultMap="notice">
		SELECT * FROM NOTICE WHERE NOTICENO = #{boardNo}
	</select>
	
	<!-- 자유게시판 상세보기 -->
	<select id="freeDetail" resultMap="freeBoard">
		SELECT * FROM BULLETINEBOARD WHERE FREENO = #{boardNo}
	</select>
	
	<!-- 후기게시판 상세보기 -->
	<select id="reviewDetail" resultMap="reviewBoard">
		SELECT * FROM REVIEWBOARD WHERE REVIEWNO = #{boardNo}
	</select>
	
	<!-- 질의응답게시판 상세보기 -->
	<select id="questionDetail" resultMap="questionBoard">
		SELECT * FROM QUESTIONBOARD WHERE QBOARDNO = #{boardNo}
	</select>
	
	<!-- 정보공유게시판 상세보기 -->
	<select id="shareDetail" resultMap="shareBoard">
		SELECT * FROM SHAREBOARD WHERE SHARENO = #{boardNo}
	</select>
	
	<!-- 이벤트게시판 상세보기 -->
	<select id="eventDetail" resultMap="eventBoard">
		SELECT * FROM EVENTBOARD WHERE EVENTNO = #{boardNo}
	</select>
	
	<!-- faq 상세보기 -->
	<select id="faqDetail" resultMap="faq">
		SELECT * FROM FAQ WHERE FAQNO = #{faqNo}
	</select>
	
	<!-- 자유게시판 댓글보기 -->
	<select id="freeCmt" resultMap="freeCmt">
		SELECT * FROM BULLETINECOMMENT WHERE FREENO = #{cmtNo} ORDER BY FREECMTDATE ASC
	</select>
	
	<!-- 후기게시판 댓글보기 -->
	<select id="reviewCmt" resultMap="reviewCmt">
		SELECT * FROM REVIEWCOMMENT WHERE REVIEWNO = #{cmtNo} ORDER BY REVIEWCMTDATE ASC
	</select>
	
	<!-- 질의응답게시판 댓글보기 -->
	<select id="questionCmt" resultMap="questionCmt">
		SELECT * FROM QUESTIONCOMMENT WHERE QBOARDNO = #{cmtNo} ORDER BY QCMTDATE ASC
	</select>
	
	<!-- 정보공유게시판 댓글보기 -->
	<select id="shareCmt" resultMap="shareCmt">
		SELECT * FROM SHARECOMMENT WHERE SHARENO = #{cmtNo} ORDER BY SHARECMTDATE ASC
	</select>
	
	<!-- 이벤트게시판 댓글보기 -->
	<select id="eventCmt" resultMap="eventCmt">
		SELECT * FROM EVENTCOMMENT WHERE EVENTNO = #{cmtNo} ORDER BY EVENTCMTDATE ASC
	</select>
	
	<!-- 펀딩 목록 조회 : 전체 -->
	<select id="fundingList" resultType="map">
		SELECT FUNDINGTITLE, FUNDINGNO FROM FUNDING WHERE FUNDINGSTATE = '1' ORDER BY FUNDINGNO
	</select>
	
	<!-- 펀딩 목록 조회 : 카테고리 -->
	<select id="fundingListCate" resultType="map">
		SELECT FUNDINGNO, FUNDINGTITLE FROM FUNDING WHERE FUNDINGSTATE = '1'
		AND FUNDINGCATEGORY = #{fundingCategory} ORDER BY FUNDINGNO
	</select>
	
	<!-- 펀딩 신청 목록 조회 : 전체 -->
	<select id="selectFormList" resultType="Application">
		SELECT FUNDINGTITLE, APPLYNO FROM APPLICATION WHERE FEEDBACK IS NULL ORDER BY APPLYNO
	</select>
	
	<!-- 펀딩 신청 목록 조회 : 카테고리 -->
	<select id="selectFormCate" resultType="Application">
		SELECT FUNDINGTITLE, APPLYNO FROM APPLICATION WHERE FEEDBACK IS NULL AND
		FUNDINGCATEGORY = #{fundingCategory} ORDER BY APPLYNO
	</select>
	
	<!-- 반려 펀딩 목록 조회 : 전체 -->
	<select id="selectRejectedForm" resultType="Application">
		SELECT FUNDINGTITLE, FUNDINGCATEGORY, APPLYNO FROM APPLICATION WHERE FEEDBACK != 'approved'
		AND FEEDBACK IS NOT NULL ORDER BY APPLYNO
	</select>

	<!-- 반려 펀딩 목록 조회 : 카테고리 -->
	<select id="selectRejectedCategory" resultType="Application">
		SELECT FUNDINGTITLE, FUNDINGCATEGORY, APPLYNO FROM APPLICATION WHERE FEEDBACK != 'approved'
		AND FEEDBACK IS NOT NULL AND FUNDINGCATEGORY = #{fundingCategory} ORDER BY APPLYNO
	</select>
	
	<!-- 펀딩 신청 상세페이지 -->
	<select id="selectFormDetail" resultType="Application">
		SELECT * FROM APPLICATION WHERE APPLYNO = #{applyNo}
	</select>
	
	<!-- 신청 승인 / 메이커 생성 -->
	<insert id="makeMaker">
		INSERT INTO MAKER VALUES(#{maker}, #{description}, #{id})
	</insert>
	
	<!-- 신청 승인 / 펀딩 생성 -->
	<insert id="makeFunding">
		INSERT INTO FUNDING VALUES(SEQ_FUNDINGNO.NEXTVAL, 1, #{fundingCategory},
		#{fundingTitle}, #{fundingPrice}, #{fundingStart}, #{fundingFin}, #{maker},
		SYSDATE, #{fundingContent}, #{deliveryCharge}, #{deliveryDate}, 0)
	</insert>
	
	<!-- 신청 승인 / 리워드 생성 -->
	<insert id="makeReward">
		INSERT INTO REWARD VALUES (SEQ_REWARDNO.NEXTVAL, #{rewardTitle}, #{rewardEA},
		#{rewardPrice}, (SELECT FUNDINGNO FROM FUNDING WHERE MAKER = #{maker}), 0 )
	</insert>
	
	<!-- 신청 승인 / 신청서 confirmed 입력 -->
	<update id="applicationConfirm" parameterType="int">
		UPDATE APPLICATION SET FEEDBACK = 'approved' WHERE APPLYNO = #{applyNo}
	</update>
	
	<!-- 신청 거절 / 신청서 feedback 입력 -->
	<update id="formReject">
		UPDATE APPLICATION SET FEEDBACK = #{feedback} WHERE APPLYNO = #{applyNo}
	</update>
	
	<!-- 펀딩 통계 연령별 : 1020대 -->
	<select id="analAgeF1020" resultType="float">
        SELECT NVL ((SELECT NVL((SELECT COUNT(*)
        FROM (SELECT DISTINCT O.ID FROM ORDERS O JOIN USERS U ON O.ID=U.ID WHERE U.AGE BETWEEN 10 AND 29)),0) /
        NVL((SELECT COUNT(*) FROM ORDERS),0) CNT2 FROM DUAL), 0) CNT FROM DUAL
	</select>
	
	<!-- 펀딩 통계 연령별 : 3040대 -->
	<select id="analAgeF3040" resultType="float">
        SELECT NVL ((SELECT NVL((SELECT COUNT(*)
        FROM (SELECT DISTINCT O.ID FROM ORDERS O JOIN USERS U ON O.ID=U.ID WHERE U.AGE BETWEEN 30 AND 49)),0) /
        NVL((SELECT COUNT(*) FROM ORDERS),0) CNT2 FROM DUAL), 0) CNT FROM DUAL
	</select>
	
	<!-- 펀딩 통계 연령별 : 5060대 -->
	<select id="analAgeF5060" resultType="float">
        SELECT NVL ((SELECT NVL((SELECT COUNT(*)
        FROM (SELECT DISTINCT O.ID FROM ORDERS O JOIN USERS U ON O.ID=U.ID WHERE U.AGE BETWEEN 50 AND 69)),0) /
        NVL((SELECT COUNT(*) FROM ORDERS),0) CNT2 FROM DUAL), 0) CNT FROM DUAL
	</select>
	
	<!-- 펀딩 통계 분류별 : 일자리 창출 -->
	<select id="analCateF1" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='일자리 창출'
	</select>
	
	<!-- 펀딩 통계 분류별 : 공정 무역 -->
	<select id="analCateF2" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='공정 무역'
	</select>
	
	<!-- 펀딩 통계 분류별 : 친환경 -->
	<select id="analCateF3" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='친환경'
	</select>
	
	<!-- 펀딩 통계 분류별 : 기부 -->
	<select id="analCateF4" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='기부'
	</select>
	
	<!-- 펀딩 통계 분류별 : 작은 가게 -->
	<select id="analCateF5" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='작은 가게'
	</select>
	
	<!-- 펀딩 통계 분류별 : 미디어 -->
	<select id="analCateF6" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='미디어'
	</select>
	
	<!-- 펀딩 통계 분류별 : 창작자 -->
	<select id="analCateF7" resultType="Integer">
		SELECT COUNT(*) CNT FROM (
		SELECT F.FUNDINGCATEGORY FROM ORDERS O JOIN FUNDING F 
        ON O.FUNDINGNO=F.FUNDINGNO) WHERE FUNDINGCATEGORY='창작자'
	</select>
	
	<!-- 펀딩 통계 분류별 : 남성 -->
	<select id="analFGenderM" resultType="Integer">
		SELECT COUNT(*) FROM (
		SELECT DISTINCT U.ID FROM ORDERS O JOIN USERS U ON U.ID=O.ID WHERE GENDER='m')
	</select>
	
	<!-- 펀딩 통계 분류별 : 여성 -->
	<select id="analFGenderF" resultType="Integer">
		SELECT COUNT(*) FROM (
		SELECT DISTINCT U.ID FROM ORDERS O JOIN USERS U ON U.ID=O.ID WHERE GENDER='f')
	</select>
	
	<!-- 커뮤니티 통계 연령별 : 1020대 -->
	<select id="analAgeC1020" resultType="float">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.AGE BETWEEN 10 AND 29)), 0) AS RESULT FROM DUAL
	</select>
	
	<!-- 커뮤니티 통계 연령별 : 3040대 -->
	<select id="analAgeC3040" resultType="float">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.AGE BETWEEN 30 AND 49)), 0) AS RESULT FROM DUAL
	</select>
	
	<!-- 커뮤니티 통계 연령별 : 5060대 -->
	<select id="analAgeC5060" resultType="float">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.AGE BETWEEN 50 AND 69)), 0) AS RESULT FROM DUAL
	</select>	
	
	<!-- 커뮤니티 통계 분류별 : 자유게시판 -->
	<select id="analCateC1" resultType="Integer">
		SELECT COUNT(*) CNT FROM BULLETINEBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 후기게시판 -->
	<select id="analCateC2" resultType="Integer">
		SELECT COUNT(*) CNT FROM REVIEWBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 질답게시판 -->
	<select id="analCateC3" resultType="Integer">
		SELECT COUNT(*) CNT FROM QUESTIONBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 이벤트게시판 -->
	<select id="analCateC4" resultType="Integer">
		SELECT COUNT(*) CNT FROM EVENTBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 정보공유게시판 -->
	<select id="analCateC5" resultType="Integer">
		SELECT COUNT(*) CNT FROM SHAREBOARD
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 남성 -->
	<select id="analCGenderM" resultType="Integer">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.GENDER ='m')), 0) AS RESULT FROM DUAL   
	</select>
	
	<!-- 커뮤니티 통계 분류별 : 여성 -->
	<select id="analCGenderF" resultType="Integer">
		SELECT NVL((SELECT COUNT(*) CNT FROM 
		(SELECT DISTINCT G.ID FROM
		(SELECT DISTINCT F.ID FROM
		(SELECT DISTINCT C.ID FROM
		(SELECT DISTINCT A.ID FROM 
		(SELECT DISTINCT B.ID FROM BULLETINEBOARD B LEFT OUTER JOIN REVIEWBOARD R ON B.ID=R.ID) A
		JOIN QUESTIONBOARD Q ON A.ID=Q.ID) C LEFT OUTER JOIN EVENTBOARD E ON C.ID=E.ID) F
		LEFT OUTER JOIN SHAREBOARD S ON F.ID=S.ID) G LEFT OUTER JOIN USERS U ON G.ID=U.ID
		WHERE U.GENDER ='f')), 0) AS RESULT FROM DUAL   
	</select>
	
	<!-- 실 결제 금액 차트 -->
	<select id="analPayment" resultType="hashMap">
        SELECT B.ORDERDATE, B.TOTAL FROM
        (SELECT ROW_NUMBER() OVER(PARTITION BY TO_CHAR(O.ORDERDATE,'YYYY-MM-DD')
        ORDER BY O.ORDERNO DESC) RNUM, O.ORDERNO, A.ORDERDATE, O.ORDERTOTALPRICE, 
        SUM(O.ORDERTOTALPRICE) OVER (ORDER BY O.ORDERNO ROWS UNBOUNDED PRECEDING) TOTAL FROM ORDERS O
        JOIN (SELECT TO_CHAR(SYSDATE - (LEVEL - 1), 'YYYY-MM-DD') ORDERDATE 
		<![CDATA[
		FROM DUAL CONNECT BY LEVEL <= 7 ORDER BY ORDERDATE) A
        ]]>
        ON TO_CHAR(O.ORDERDATE,'YYYY-MM-DD') = A.ORDERDATE ORDER BY ORDERNO) B
        WHERE B.RNUM=1 ORDER BY B.ORDERDATE
	</select>
	
	<!-- 실 결제 금액 표 -->
	<select id="analPaymentTab" resultType="hashMap">
		SELECT COUNT(*) ORDERCNT, SUM(ORDERTOTALPRICE) ORDERTOTALPRICE FROM ORDERS
	</select>
	
	<!-- 펀딩 현황 표 -->
	<select id="analFundingTab" resultType="hashMap">
      	SELECT A.*, B.*, C.*, D.* FROM
        (SELECT COUNT(*) PROCEEDING FROM FUNDING WHERE FUNDINGSTATE=1) A
        CROSS JOIN
        (SELECT COUNT(*) APPLY FROM APPLICATION WHERE FEEDBACK IS NULL) B
        CROSS JOIN
        (SELECT COUNT(*) REJECT FROM APPLICATION WHERE FEEDBACK IS NOT NULL AND FEEDBACK != 'approved') C
        CROSS JOIN
        (SELECT COUNT(*) FINISH FROM FUNDING WHERE FUNDINGSTATE = 0) D		
	</select>
	
	<!-- 관리자 메인 페이지 : 펀딩 관리 -->
	<select id="adminFormList" resultType="hashMap">
       	SELECT E.FND, E.FNDNO, E.APPL, E.APPNO, G.RJC, G.RJCNO FROM
        (SELECT B.FND, B.FNDNO, D.APPL, D.APPNO, D.RNUM FROM
        (SELECT A.FUNDINGTITLE FND, A.APPLYNO FNDNO, A.RNUM FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY APPLYNO DESC) RNUM, FUNDINGTITLE, APPLYNO FROM APPLICATION
        WHERE FEEDBACK = 'approved' ORDER BY APPLYNO) A WHERE A.RNUM
		<![CDATA[        
        < 3 ORDER BY A.RNUM	) B JOIN
        ]]>
        (SELECT C.* FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY APPLYNO DESC) RNUM, FUNDINGTITLE APPL, APPLYNO APPNO FROM APPLICATION
        WHERE FEEDBACK IS NULL ORDER BY APPLYNO) C WHERE C.RNUM
		<![CDATA[        
        < 3 ORDER BY C.RNUM) D ON B.RNUM=D.RNUM) E JOIN
        ]]>
        (SELECT F.* FROM
        (SELECT ROW_NUMBER() OVER (ORDER BY APPLYNO DESC) RNUM, FUNDINGTITLE RJC, APPLYNO RJCNO FROM APPLICATION
        WHERE FEEDBACK IS NOT NULL AND FEEDBACK != 'approved' ORDER BY APPLYNO) F WHERE F.RNUM
		<![CDATA[        
        < 3 ORDER BY F.RNUM) G ON E.RNUM=G.RNUM
        ]]>
	</select>
	
	<!-- 관리자 메인 페이지 : 회원 게시판 -->
	<select id="userBoardList" resultType="hashMap">
        select k.free, k.review, k.question, k.event, m.sha, m.rnum from
        (select h.free, h.review, h.question, j.event, j.rnum from
        (select e.free, e.review, g.question, g.rnum from
        (select d.free, c.review, c.rnum from
        (select a.free, a.rnum from
        (select row_number() over(order by freeno desc) rnum, freetitle free from bulletineboard) a where 
		<![CDATA[        
        rnum<3) d join
        ]]>
       	(select b.review, b.rnum from 
        (select row_number() over(order by reviewno desc) rnum, reviewtitle review from reviewboard) b where
		<![CDATA[        
        rnum<3) c on d.rnum=c.rnum) e join
        ]]>
        (select f.question, f.rnum from 
        (select row_number() over(order by qboardno desc) rnum, qboardtitle question from questionboard) f where
		<![CDATA[        
        rnum<3) g on e.rnum=g.rnum) h join
        ]]>
        (select i.event, i.rnum from 
        (select row_number() over(order by eventno desc) rnum, eventtitle event from eventboard) i where
		<![CDATA[        
        rnum<3) j on h.rnum=j.rnum) k join
        ]]>
        (select l.sha, l.rnum from 
        (select row_number() over(order by shareno desc) rnum, sharetitle sha from shareboard) l where
		<![CDATA[        
        rnum<3) m on m.rnum=k.rnum
        ]]>
	</select>
	
	<!-- 관리자 메인 페이지 : 회원 게시판 -->
	<select id="adminBoardList" resultType="hashMap">
		select e.noticeno, e.notice, e.faqno, e.faq, g.qnano, g.qna from
      	(select b.noticeno, b.notice, d.faqno, d.faq, d.rnum from
       	(select a.noticeno, a.notice, a.rnum from 
       	(select row_number() over(order by noticeno desc) rnum, noticetitle notice, noticeno from notice) a 
		<![CDATA[        
       	where a.rnum<3) b join
        ]]>
       	(select c.faqno, c.faq, c.rnum from
       	(select row_number() over(order by faqno desc) rnum, faqtitle faq, faqno from faq) c where 
		<![CDATA[        
       	c.rnum<3) d on b.rnum=d.rnum) e join
        ]]>
       	(select f.qnano, f.qna, f.rnum from
       	(select row_number() over(order by qnano desc) rnum, qnatitle qna, qnano from qna) f where 
		<![CDATA[        
       	f.rnum<3) g on e.rnum=g.rnum order by g.rnum
        ]]>
	</select>
		
</mapper>
